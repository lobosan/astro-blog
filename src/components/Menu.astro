---
import { getCollection } from "astro:content";

const getProductDemoPosts = async () => {
  const posts = await getCollection("posts");
  return posts
    .filter(post => post.data.productDemo)
    .sort((a, b) => (a.data.productDemo ?? "").localeCompare(b.data.productDemo ?? ""));
};
const productDemoPosts = await getProductDemoPosts();
---

<div class="relative h-8">
  <button
    id="toggle-menu"
    title="Toggle Menu"
    aria-expanded="false"
    aria-controls="menu"
    class="relative h-8 w-8"
  >
    <svg
      id="open-icon"
      viewBox="0 0 24 24"
      class="absolute left-0 top-0 h-8 w-8 rotate-0 fill-white opacity-100 transition-all duration-300 ease-in-out"
    >
      <path d="M4 11h12v2H4zm0-5h16v2H4zm0 12h7.235v-2H4z"></path>
    </svg>
    <svg
      id="close-icon"
      viewBox="0 0 24 24"
      class="absolute left-0 top-0 h-8 w-8 rotate-90 fill-white opacity-0 transition-all duration-300 ease-in-out"
    >
      <path
        d="m16.192 6.344-4.243 4.242-4.242-4.242-1.414 1.414L10.535 12l-4.242 4.242 1.414 1.414 4.242-4.242 4.243 4.242 1.414-1.414L13.364 12l4.242-4.242z"
      ></path>
    </svg>
  </button>
  <div
    id="menu"
    role="menu"
    class="absolute left-0 z-20 hidden w-80 rounded border bg-white p-3 pb-5 shadow-sm dark:border-neutral-700 dark:bg-neutral-800"
  >
    <div class="mb-2 flex items-center justify-between">
      <div class="ml-2 text-xl font-bold dark:text-white">Menu</div>
    </div>
    <nav>
      {
        [
          ...productDemoPosts.map(post => ({
            href: `/posts/${post.slug}`,
            text: post.data.productDemo,
          })),
          { href: "/livechat-overlay", text: "Live Chat - Overlay" },
        ].map(({ href, text }) => (
          <a
            {href}
            title={text}
            role="menuitem"
            class="dark:hover:bg-neutral-700; block cursor-pointer rounded px-3 py-2 font-medium tracking-wide text-gray-800 transition-colors duration-200 hover:bg-gray-100 dark:text-white dark:hover:bg-neutral-700"
          >
            {text}
          </a>
        ))
      }
    </nav>
  </div>
</div>

<script>
  const toggleMenu = document.getElementById("toggle-menu");
  const menu = document.getElementById("menu");
  const openIcon = document.getElementById("open-icon");
  const closeIcon = document.getElementById("close-icon");

  if (toggleMenu && menu && openIcon && closeIcon) {
    toggleMenu.addEventListener("click", () => {
      const isMenuOpen = menu.classList.toggle("hidden");
      toggleMenu.setAttribute("aria-expanded", (!isMenuOpen).toString());

      openIcon.classList.toggle("opacity-0", !isMenuOpen);
      openIcon.classList.toggle("rotate-90", !isMenuOpen);
      openIcon.classList.toggle("opacity-100", isMenuOpen);
      openIcon.classList.toggle("rotate-0", isMenuOpen);

      closeIcon.classList.toggle("opacity-0", isMenuOpen);
      closeIcon.classList.toggle("rotate-90", isMenuOpen);
      closeIcon.classList.toggle("opacity-100", !isMenuOpen);
      closeIcon.classList.toggle("rotate-0", !isMenuOpen);
    });
  }
</script>
