---
interface Props {
  vfContainerId: number;
  slug?: string;
}

const { vfContainerId, slug } = Astro.props;
const link = slug ? `/posts/${slug}` : "";
---

<div
  class="ml-[15px] flex border-l border-b-neutral-300 pl-3 font-semibold text-gray-800 dark:border-neutral-600"
>
  <a
    class="flex hover:underline"
    href={`${link}#vf-conversations-container`}
    title="Join the Conversation"
  >
    <svg
      viewBox="0 0 24 24"
      fill="currentColor"
      class="mr-1 mt-[1px] h-5 w-5 text-gray-500 dark:text-white"
    >
      <path d="M7 7h10v2H7zm0 4h7v2H7z"></path>
      <path
        d="M20 2H4c-1.103 0-2 .897-2 2v18l5.333-4H20c1.103 0 2-.897 2-2V4c0-1.103-.897-2-2-2zm0 14H6.667L4 18V4h16v12z"
      ></path>
    </svg>
    <div class="viafoura">
      <div class="skeleton-loader relative h-5 w-6 rounded bg-[#ebebeb] dark:bg-gray-600">
        <div class="bg-shimmer animate-shimmer absolute inset-0 bg-no-repeat"></div>
      </div>
      <vf-conversations-count vf-container-id={vfContainerId}></vf-conversations-count>
    </div>
  </a>
</div>

<script>
  const observer = new MutationObserver(mutations => {
    mutations.forEach(mutation => {
      if (mutation.type === "childList") {
        mutation.addedNodes.forEach(node => {
          if (
            node.nodeType === Node.ELEMENT_NODE &&
            (node as Element).classList.contains("vf-comments-count")
          ) {
            document.querySelector(".skeleton-loader")?.classList.add("hidden");
          }
        });
      }
    });
  });
  observer.observe(document.body, { childList: true, subtree: true });
</script>
